
import React, { useEffect, useRef } from 'react'
import { createChart, IChartApi, LineData } from 'lightweight-charts'

type Props = {
  series?: LineData[]
  height?: number
  symbol?: string
}

export function Chart({ series = [], height = 300, symbol = '' }: Props) {
  const ref = useRef<HTMLDivElement | null>(null)
  const chartRef = useRef<IChartApi | null>(null)

  useEffect(() => {
    if (!ref.current) return
    const chart = createChart(ref.current, {
      height,
      layout: { background: { color: 'transparent' }, textColor: '#ffffff' },
      grid: { vertLines: { color: 'rgba(255,255,255,0.08)' }, horzLines: { color: 'rgba(255,255,255,0.08)' } },
      rightPriceScale: { borderColor: 'rgba(255,255,255,0.1)' },
      timeScale: { borderColor: 'rgba(255,255,255,0.1)' },
    })
    const line = chart.addLineSeries({ color: '#77FF91' })
    if (series.length) line.setData(series)
    chartRef.current = chart
    const handle = () => chart.applyOptions({ width: ref.current!.clientWidth })
    handle(); window.addEventListener('resize', handle)
    return () => { window.removeEventListener('resize', handle); chart.remove() }
  }, [height])

  useEffect(() => {
    const chart = chartRef.current
    if (!chart) return
    // set title via overlay
  }, [symbol])

  return <div ref={ref} className="rounded-lg border border-white/10 bg-gunmetal" />
}
